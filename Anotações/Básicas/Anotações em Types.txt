14) Type Annotations e Inference
  - Type Annotations
    Trechos de código que vão definir o type de uma variável
  - Type inference
    - Typescript tenta descobrir o type de uma variável

15) Type Annotations com variáveis

16) Object Literal Annotations:
  string[] -> array com strings dentro
  number[] -> array com números
  boolean[] ..

  //Object Literal:
    let point: { x: number; y: number} = {
    x: 10,
    y: 20,
    };
  
17) Type Annotations pra funtions
  - seja logNumber uma função
  const logNumber: (argumento1: number; argumento2: string, ...)
  => string
    - logNumber recebe dois argumentos, um número e uma string, e retorna 
    uma string

    - Type Annotation: declarativo, você avisa o tipo de dado
    - Type Inference: na primeira declaração, o typescript infere 
    qual será o type da variável

18) Entendo Type Inference com profundidade
  - const color = 'red'
  (declaração) x (inicialização)

  - Quando usar Type Annotation ou Type Inference?
    - Sempre que possível, utilizaremos Type Inference (menos código);
    
19) Onde usar Type Annotations e o type 'Any'
  - Typescript não tem como saber o que receberemos de JSON.parse(), pois
  depende do conteúdo do json...
    - nesse caso, o resultado de uma função desse tipo é 'any'
      - any é um type, como string ou number
      - significa que o typescript não sabe o que tá acontecendo
      - evitamos 'any' a qualquer custo, pois typescript não nos ajuda
      se temos esse type

20) Resolvendo o type 'any'
  - definindo um type pra variável que será assinalada por uma função cujo
  resultado é um type 'any'

21) Inicialização posterior
  - pouco usado

22) Quando Type Inference não funciona
  - uma variável pode ser de vários tipos dependendo do caso
  let valor: booolean | number = false;
    - ou booleano ou número!


